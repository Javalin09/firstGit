<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	 ">

    <!-- 1开启注解： -->
    <context:annotation-config></context:annotation-config>

    <!-- 2 设置扫描的包 表示不扫描控制层，控制层由springMVC来扫描 -->
    <context:component-scan base-package="com.ccb">
        <!-- 表示不扫描控制层 -->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 设置与数据库配置文件关联 引入配置文件 读取数据库有关的配置信息-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <!--3  配置数据源连接池有关的属性 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="driverClassName" value="${driver}"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <!--4  mybatis的配置  SqlSessionFactoryBean的配置和注入操作-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- ① 配置和数据源有关 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- ②其他的属性 和映射文件有关的配置信息 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml">
        </property>
        <!-- 配置pagehelper分页插件 -->
        <!-- 注意其他配置 -->
        <!--<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        &lt;!&ndash;使用下面的方式配置参数，一行配置一个 &ndash;&gt;
                        <value>
                            params=value1
                        </value>
                    </property>
                </bean>
            </array>
        </property>-->

    </bean>
    <!-- 5 配置扫描器 MapperScannerConfigurer 需要用到mybatis-spring.jar-->
    <!-- spring跟mybatis的整合，扫描所有的dao下的接口，然后创建接口的实现类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
        <property name="basePackage" value="com.ccb.dao"></property>
        <!-- 注意这里的是value 不是ref   -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置通知 -->
  <!--  <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            &lt;!&ndash;  以get开头的方法，查询不使用事务:只读,NOT_SUPPORTED:不支持事务 &ndash;&gt;
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"></tx:method>
            <tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED"></tx:method>
            &lt;!&ndash; 其他方法使用默认的事务设置  propagation="REQUIRED"传播行为 如果有事务, 那么加入事务, 没有的话新建一个(默认情况下)&ndash;&gt;
            <tx:method name="*" propagation="REQUIRED"></tx:method>
        </tx:attributes>
    </tx:advice>

    &lt;!&ndash; 配置aop &ndash;&gt;
    <aop:config>
        &lt;!&ndash; 配置切入点 &ndash;&gt;
        <aop:pointcut expression="execution(* com.etc.service.*.*(..))" id="transactionPointcut"/>
        &lt;!&ndash; 配置切入点跟通知器的关联 &ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
    </aop:config>-->
    <!-- 事务管理 -->
    <!-- 配置事务管理器  事务核心管理器,封装了所有事务操作. 依赖于连接池-->

    <!-- 开启事务管理注解 -->
    <tx:annotation-driven/>

</beans>
